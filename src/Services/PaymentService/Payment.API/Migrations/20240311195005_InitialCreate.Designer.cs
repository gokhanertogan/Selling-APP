// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Payment.API.Contexts;

#nullable disable

namespace Payment.API.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240311195005_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Payment.API.Entities.Payment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseSerialColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("OrderId")
                        .HasColumnType("integer");

                    b.Property<string>("PaymentType")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Payments", "sales");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Amount = 100.50m,
                            OrderId = 0,
                            PaymentType = "Cash"
                        },
                        new
                        {
                            Id = 2,
                            Amount = 200.75m,
                            OrderId = 0,
                            PaymentType = "Credit Card"
                        },
                        new
                        {
                            Id = 3,
                            Amount = 300.25m,
                            OrderId = 0,
                            PaymentType = "Bank Transfer"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
